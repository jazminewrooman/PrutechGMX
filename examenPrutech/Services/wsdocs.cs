//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IGMXDocumentRepository")]
public interface IGMXDocumentRepository
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGMXDocumentRepository/ReturnDocument", ReplyAction="http://tempuri.org/IGMXDocumentRepository/ReturnDocumentResponse")]
    System.IAsyncResult BeginReturnDocument(string User, string Clave, string Llave, string Name, bool Generales, System.AsyncCallback callback, object asyncState);
    
    byte[] EndReturnDocument(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGMXDocumentRepository/GetFolletosDocumentosEmitidos", ReplyAction="http://tempuri.org/IGMXDocumentRepository/GetFolletosDocumentosEmitidosResponse")]
    System.IAsyncResult BeginGetFolletosDocumentosEmitidos(string User, string Clave, string Llave, string Name, System.AsyncCallback callback, object asyncState);
    
    byte[] EndGetFolletosDocumentosEmitidos(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IGMXDocumentRepositoryChannel : IGMXDocumentRepository, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ReturnDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReturnDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public byte[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetFolletosDocumentosEmitidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetFolletosDocumentosEmitidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public byte[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GMXDocumentRepositoryClient : System.ServiceModel.ClientBase<IGMXDocumentRepository>, IGMXDocumentRepository
{
    
    private BeginOperationDelegate onBeginReturnDocumentDelegate;
    
    private EndOperationDelegate onEndReturnDocumentDelegate;
    
    private System.Threading.SendOrPostCallback onReturnDocumentCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetFolletosDocumentosEmitidosDelegate;
    
    private EndOperationDelegate onEndGetFolletosDocumentosEmitidosDelegate;
    
    private System.Threading.SendOrPostCallback onGetFolletosDocumentosEmitidosCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public GMXDocumentRepositoryClient()
    {
    }
    
    public GMXDocumentRepositoryClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public GMXDocumentRepositoryClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public GMXDocumentRepositoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public GMXDocumentRepositoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<ReturnDocumentCompletedEventArgs> ReturnDocumentCompleted;
    
    public event System.EventHandler<GetFolletosDocumentosEmitidosCompletedEventArgs> GetFolletosDocumentosEmitidosCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IGMXDocumentRepository.BeginReturnDocument(string User, string Clave, string Llave, string Name, bool Generales, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReturnDocument(User, Clave, Llave, Name, Generales, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    byte[] IGMXDocumentRepository.EndReturnDocument(System.IAsyncResult result)
    {
        return base.Channel.EndReturnDocument(result);
    }
    
    private System.IAsyncResult OnBeginReturnDocument(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string User = ((string)(inValues[0]));
        string Clave = ((string)(inValues[1]));
        string Llave = ((string)(inValues[2]));
        string Name = ((string)(inValues[3]));
        bool Generales = ((bool)(inValues[4]));
        return ((IGMXDocumentRepository)(this)).BeginReturnDocument(User, Clave, Llave, Name, Generales, callback, asyncState);
    }
    
    private object[] OnEndReturnDocument(System.IAsyncResult result)
    {
        byte[] retVal = ((IGMXDocumentRepository)(this)).EndReturnDocument(result);
        return new object[] {
                retVal};
    }
    
    private void OnReturnDocumentCompleted(object state)
    {
        if ((this.ReturnDocumentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReturnDocumentCompleted(this, new ReturnDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReturnDocumentAsync(string User, string Clave, string Llave, string Name, bool Generales)
    {
        this.ReturnDocumentAsync(User, Clave, Llave, Name, Generales, null);
    }
    
    public void ReturnDocumentAsync(string User, string Clave, string Llave, string Name, bool Generales, object userState)
    {
        if ((this.onBeginReturnDocumentDelegate == null))
        {
            this.onBeginReturnDocumentDelegate = new BeginOperationDelegate(this.OnBeginReturnDocument);
        }
        if ((this.onEndReturnDocumentDelegate == null))
        {
            this.onEndReturnDocumentDelegate = new EndOperationDelegate(this.OnEndReturnDocument);
        }
        if ((this.onReturnDocumentCompletedDelegate == null))
        {
            this.onReturnDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnDocumentCompleted);
        }
        base.InvokeAsync(this.onBeginReturnDocumentDelegate, new object[] {
                    User,
                    Clave,
                    Llave,
                    Name,
                    Generales}, this.onEndReturnDocumentDelegate, this.onReturnDocumentCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IGMXDocumentRepository.BeginGetFolletosDocumentosEmitidos(string User, string Clave, string Llave, string Name, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetFolletosDocumentosEmitidos(User, Clave, Llave, Name, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    byte[] IGMXDocumentRepository.EndGetFolletosDocumentosEmitidos(System.IAsyncResult result)
    {
        return base.Channel.EndGetFolletosDocumentosEmitidos(result);
    }
    
    private System.IAsyncResult OnBeginGetFolletosDocumentosEmitidos(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string User = ((string)(inValues[0]));
        string Clave = ((string)(inValues[1]));
        string Llave = ((string)(inValues[2]));
        string Name = ((string)(inValues[3]));
        return ((IGMXDocumentRepository)(this)).BeginGetFolletosDocumentosEmitidos(User, Clave, Llave, Name, callback, asyncState);
    }
    
    private object[] OnEndGetFolletosDocumentosEmitidos(System.IAsyncResult result)
    {
        byte[] retVal = ((IGMXDocumentRepository)(this)).EndGetFolletosDocumentosEmitidos(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetFolletosDocumentosEmitidosCompleted(object state)
    {
        if ((this.GetFolletosDocumentosEmitidosCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetFolletosDocumentosEmitidosCompleted(this, new GetFolletosDocumentosEmitidosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetFolletosDocumentosEmitidosAsync(string User, string Clave, string Llave, string Name)
    {
        this.GetFolletosDocumentosEmitidosAsync(User, Clave, Llave, Name, null);
    }
    
    public void GetFolletosDocumentosEmitidosAsync(string User, string Clave, string Llave, string Name, object userState)
    {
        if ((this.onBeginGetFolletosDocumentosEmitidosDelegate == null))
        {
            this.onBeginGetFolletosDocumentosEmitidosDelegate = new BeginOperationDelegate(this.OnBeginGetFolletosDocumentosEmitidos);
        }
        if ((this.onEndGetFolletosDocumentosEmitidosDelegate == null))
        {
            this.onEndGetFolletosDocumentosEmitidosDelegate = new EndOperationDelegate(this.OnEndGetFolletosDocumentosEmitidos);
        }
        if ((this.onGetFolletosDocumentosEmitidosCompletedDelegate == null))
        {
            this.onGetFolletosDocumentosEmitidosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFolletosDocumentosEmitidosCompleted);
        }
        base.InvokeAsync(this.onBeginGetFolletosDocumentosEmitidosDelegate, new object[] {
                    User,
                    Clave,
                    Llave,
                    Name}, this.onEndGetFolletosDocumentosEmitidosDelegate, this.onGetFolletosDocumentosEmitidosCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IGMXDocumentRepository CreateChannel()
    {
        return new GMXDocumentRepositoryClientChannel(this);
    }
    
    private class GMXDocumentRepositoryClientChannel : ChannelBase<IGMXDocumentRepository>, IGMXDocumentRepository
    {
        
        public GMXDocumentRepositoryClientChannel(System.ServiceModel.ClientBase<IGMXDocumentRepository> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginReturnDocument(string User, string Clave, string Llave, string Name, bool Generales, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[5];
            _args[0] = User;
            _args[1] = Clave;
            _args[2] = Llave;
            _args[3] = Name;
            _args[4] = Generales;
            System.IAsyncResult _result = base.BeginInvoke("ReturnDocument", _args, callback, asyncState);
            return _result;
        }
        
        public byte[] EndReturnDocument(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            byte[] _result = ((byte[])(base.EndInvoke("ReturnDocument", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetFolletosDocumentosEmitidos(string User, string Clave, string Llave, string Name, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[4];
            _args[0] = User;
            _args[1] = Clave;
            _args[2] = Llave;
            _args[3] = Name;
            System.IAsyncResult _result = base.BeginInvoke("GetFolletosDocumentosEmitidos", _args, callback, asyncState);
            return _result;
        }
        
        public byte[] EndGetFolletosDocumentosEmitidos(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            byte[] _result = ((byte[])(base.EndInvoke("GetFolletosDocumentosEmitidos", _args, result)));
            return _result;
        }
    }
}
